import type { Metadata } from "next";
import localFont from "next/font/local";
import "../globals.css";
import { Poppins } from "next/font/google";
import { draftMode } from "next/headers";
import DisableDraftMode from "@/components/DisableDraftMode";
import { Header } from "@/components/Header";
import Footer from "@/components/Footer";
import { Toaster } from "react-hot-toast";
import { FirebaseAuthProvider } from "@/components/FirebaseAuthProvider";
import { LocationProvider } from "@/contexts/LocationContext";
import { CategoryProvider } from "@/contexts/CategoryContext";
import CacheManager from "@/components/CacheManager";

const poppins = localFont({
  src: "../fonts/Poppins.woff2",
  variable: "--font-poppins",
  weight: "400",
  preload: false,
});

export const metadata: Metadata = {
  title: "Celeste ",
  description: "Generated by create next app",
  icons: {
    icon: "/favicon.png",
    shortcut: "/favicon.png",
    apple: "/favicon.png",
  },
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={`${poppins.variable} antialiased`}>
        {(await draftMode()).isEnabled && (
          <DisableDraftMode />
        )}
        <FirebaseAuthProvider>
          <LocationProvider>
            <CategoryProvider>
              <Header />
              <div className="main-content pt-20">{children}</div>
              <Footer />
              <Toaster
                position="bottom-right"
                toastOptions={{
                  style: {
                    background: "#000000",
                    color: "#fff",
                  },
                }}
              />
              {/* Cache Manager for debugging - only show in development */}
              {process.env.NODE_ENV === 'development' && (
                <CacheManager showStats={true} showControls={true} />
              )}
            </CategoryProvider>
          </LocationProvider>
        </FirebaseAuthProvider>
      </body>
    </html>
  );
}
